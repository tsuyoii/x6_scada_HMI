{"version":3,"file":"static/js/846.56f1408c.chunk.js","mappings":"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","sources":["nodeComponents/data/modbusReadComponent.tsx"],"sourcesContent":["import {\n  Card,\n  Divider,\n  Input,\n  Radio,\n  Row,\n  Select,\n  Space,\n  Typography,\n} from 'antd';\nimport * as React from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\n\ninterface Params {\n  builder: string;\n  cell?: any;\n  cellId?: string;\n}\ninterface ReadInstructionsType {\n  typeTemplate: string;\n  addressTemplate?: string;\n  lengthTemplate?: string;\n  deviceIdCodeTemplate?: string;\n  objectIdTemplate?: string;\n  key: string;\n}\nconst { Option } = Select;\n\nconst ParityData = ['none', 'even', 'mark', 'odd', 'space'];\nconst BaudRateData = ['110', '300', '600', '1200'];\nconst RegisterTypeData = [\n  'input-register',\n  'holding-register',\n  'discrete-input',\n  'coil',\n  'read-device-identification',\n];\nconst DataBitsData = [5, 6, 7, 8];\nexport const FakeData: React.FC<Params> = (props) => {\n  const cells = props.cell?.toJSON();\n\n  const [connectionTypeTemplate, setConnectionType] = React.useState(\n    cells.config?.connectionTypeTemplate || 'tcp'\n  );\n  const [items, setItems] = React.useState(BaudRateData);\n  const [name, setName] = React.useState('');\n  const [baudRateTemplate, setBaudRate] = React.useState(\n    cells.config?.baudRateTemplate || ''\n  );\n  const [pathTemplate, setPath] = React.useState(\n    cells.config?.pathTemplate || ''\n  );\n  const [parityTemplate, setParity] = React.useState(\n    cells.config?.parityTemplate || ParityData[1]\n  );\n  const [dataBitsTemplate, setDataBits] = React.useState(\n    cells.config?.dataBitsTemplate || DataBitsData[0]\n  );\n  const [stopBitsTemplate, setStopBits] = React.useState(\n    cells.config?.stopBitsTemplate || 1\n  );\n  const [unitIdTemplate, setUnitId] = React.useState(\n    cells.config?.unitIdTemplate || ''\n  );\n  const [areUnsignedInts, setUnsignedInts] = React.useState(\n    cells.config?.areUnsignedInts || false\n  );\n  const [timeoutTemplate, setTimeoutTemplate] = React.useState(\n    cells.config?.timeoutTemplate || ''\n  );\n  const [endiannessTemplate, setEndianness] = React.useState(\n    cells.config?.endiannessTemplate || ''\n  );\n  const [hostTemplate, setHost] = React.useState(\n    cells.config?.hostTemplate || ''\n  );\n  const [portTemplate, setPort] = React.useState(\n    cells.config?.portTemplate || ''\n  );\n  const [readInstructionsType, setReadInstructionsType] = React.useState(\n    cells.config?.readInstructionsType || 'array'\n  );\n  const [readInstructions, setReadInstructions] = React.useState(\n    cells.config?.readInstructions\n  );\n  const [destinationPath, setDestinationPath] = React.useState(\n    cells.config?.destinationPath || ''\n  );\n\n  React.useEffect(() => {\n    setConnectionType(cells.config?.connectionTypeTemplate || 'tcp');\n    if (!items.includes(cells.config?.baudRateTemplate + '')) {\n      setItems([...items, cells.config?.baudRateTemplate?.toString()]);\n    }\n    setPath(cells.config?.pathTemplate);\n    setBaudRate(cells.config?.baudRateTemplate);\n    setParity(cells.config?.parityTemplate || ParityData[1]);\n    setDataBits(cells.config?.dataBitsTemplate || DataBitsData[0]);\n    setStopBits(cells.config?.stopBitsTemplate || 1);\n    setUnitId(cells.config?.unitIdTemplate),\n      setUnsignedInts(cells.config?.areUnsignedInts || false),\n      setEndianness(cells.config?.endiannessTemplate),\n      setHost(cells.config?.hostTemplate),\n      setPort(cells.config?.portTemplate),\n      setTimeoutTemplate(cells.config?.timeoutTemplate),\n      setReadInstructionsType(cells.config?.readInstructionsType || 'array');\n    if (cells.config?.readInstructionsType === 'array') {\n      setReadInstructions([\n        ...cells.config?.readInstructions,\n        {\n          addressTemplate: '',\n          key: '',\n          lengthTemplate: '',\n          typeTemplate: 'input-register',\n        },\n      ]);\n    } else if (cells.config?.readInstructionsType === 'payload') {\n      setReadInstructions(cells.config?.readInstructions || '');\n    }\n    setDestinationPath(cells.config?.destinationPath);\n  }, [props.cellId]);\n\n  React.useEffect(() => {\n    props.cell?.prop('config', {\n      connectionTypeTemplate,\n      pathTemplate,\n      timeoutTemplate,\n      baudRateTemplate,\n      parityTemplate,\n      dataBitsTemplate,\n      stopBitsTemplate,\n      unitIdTemplate,\n      areUnsignedInts,\n      endiannessTemplate,\n      hostTemplate,\n      portTemplate,\n      readInstructionsType,\n      destinationPath,\n      readInstructions:\n        readInstructionsType === 'payloadPath'\n          ? readInstructions\n          : readInstructions.filter((item: any) => item.key !== ''),\n    });\n  }, [\n    props.cellId,\n    connectionTypeTemplate,\n    pathTemplate,\n    timeoutTemplate,\n    baudRateTemplate,\n    parityTemplate,\n    dataBitsTemplate,\n    stopBitsTemplate,\n    unitIdTemplate,\n    areUnsignedInts,\n    endiannessTemplate,\n    hostTemplate,\n    portTemplate,\n    readInstructionsType,\n    destinationPath,\n    readInstructions,\n  ]);\n\n  const onBaudRateChange = (event: any) => {\n    setBaudRate(event);\n  };\n\n  const addItem = (e: any) => {\n    e.preventDefault();\n    setItems([...items, name]);\n    setName('');\n  };\n\n  const onChangeReadInstructionsType = (value: string) => {\n    setReadInstructionsType(value);\n    if (value === 'array') {\n      setReadInstructions([\n        {\n          addressTemplate: '',\n          key: '',\n          lengthTemplate: '',\n          typeTemplate: 'input-register',\n        },\n      ]);\n    } else if (value === 'payloadPath') {\n      setReadInstructions('');\n    }\n  };\n\n  const setReadInstructionsConfig = (\n    value: string,\n    type: string,\n    index?: number\n  ) => {\n    if (readInstructionsType === 'payloadPath' && type === 'payload') {\n      setReadInstructions(value);\n      return;\n    }\n    const temp = [...readInstructions];\n    temp[index!][type] = value;\n    if (index === temp.length - 1 && temp[index!]['key'] !== '') {\n      temp[index! + 1] = {\n        addressTemplate: '',\n        key: '',\n        lengthTemplate: '',\n        typeTemplate: 'input-register',\n      };\n    }\n    setReadInstructions([...temp]);\n  };\n\n  return (\n    <Space direction=\"vertical\">\n      <Divider plain>Address Config</Divider>\n      <Row>\n        <Radio.Group\n          value={connectionTypeTemplate}\n          onChange={(e) => setConnectionType(e.target.value)}>\n          <Space direction=\"vertical\">\n            <Radio value={'tcp'}>TCP Connection</Radio>\n            <Radio value={'serial'}>Serial RTU Connection</Radio>\n          </Space>\n        </Radio.Group>\n      </Row>\n      {connectionTypeTemplate === 'serial' ? (\n        <>\n          <Row>Path Template</Row>\n          <Row>\n            <Input\n              placeholder=\"e.g./dev/ROBOT or {{data.serial}}\"\n              value={pathTemplate}\n              onChange={(v) => setPath(v.target.value)}\n            />\n          </Row>\n          <Row>Baud Rate Template</Row>\n          <Row>\n            <Select\n              style={{ width: 200 }}\n              placeholder=\"custom dropdown render\"\n              value={baudRateTemplate}\n              onChange={onBaudRateChange}\n              dropdownRender={(menu) => (\n                <>\n                  {menu}\n                  <Divider style={{ margin: '8px 0' }} />\n                  <Space align=\"center\" style={{ padding: '0 8px 4px' }}>\n                    <Input placeholder=\"Please enter item\" value={name} />\n                    <Typography.Link\n                      onClick={addItem}\n                      style={{ whiteSpace: 'nowrap' }}>\n                      <PlusOutlined /> Add item\n                    </Typography.Link>\n                  </Space>\n                </>\n              )}>\n              {items.map((item) => (\n                <Option key={item}>{item}</Option>\n              ))}\n            </Select>\n          </Row>\n          <Row>Parity Template</Row>\n          <Row>\n            <Select\n              defaultValue={ParityData[1]}\n              value={parityTemplate}\n              onChange={(e) => setParity(e)}\n              style={{ width: '100%' }}>\n              {ParityData.map((type) => (\n                <Option key={type}>{type}</Option>\n              ))}\n            </Select>\n          </Row>\n          <Row>Data Bits Template</Row>\n          <Row>\n            <Select\n              defaultValue={DataBitsData[0]}\n              value={dataBitsTemplate}\n              onChange={(v) => setDataBits(v)}\n              style={{ width: '100%' }}>\n              {DataBitsData.map((type) => (\n                <Option key={type}>{type}</Option>\n              ))}\n            </Select>\n          </Row>\n          <Row>Stop Bits Template</Row>\n          <Row>\n            <Select\n              defaultValue={1}\n              value={stopBitsTemplate}\n              onChange={(v) => setStopBits(+v)}\n              style={{ width: '100%' }}>\n              <Option key={1}>1</Option>\n              <Option key={2}>2</Option>\n            </Select>\n          </Row>\n          <Row>Unit ID Template</Row>\n          <Row>\n            <Input\n              placeholder=\"e.g.{{data.unitId}}\"\n              value={unitIdTemplate}\n              onChange={(v) => setUnitId(v.target.value)}\n            />\n          </Row>\n          <Row>\n            <Radio.Group\n              value={areUnsignedInts}\n              onChange={(e) => setUnsignedInts(e.target.value)}>\n              <Space direction=\"vertical\">\n                <Radio value={false}>\n                  Convert the results into signed integers\n                </Radio>\n                <Radio value={true}>\n                  Convert the results into unsigned integers\n                </Radio>\n              </Space>\n            </Radio.Group>\n          </Row>\n          <Row>Timeout Template (in milliseconds)</Row>\n          <Row>\n            <Input\n              placeholder=\"e.g.{{data.timeout}} or 3000000\"\n              value={timeoutTemplate}\n              onChange={(v) => setTimeoutTemplate(v.target.value)}\n            />\n          </Row>\n          <Row>Endianness Template</Row>\n          <Row>\n            <Input\n              placeholder=\"e.g.big or {{working.endianness}}\"\n              value={endiannessTemplate}\n              onChange={(v) => setEndianness(v.target.value)}\n            />\n          </Row>\n        </>\n      ) : (\n        <>\n          <Row>Host Template</Row>\n          <Row>\n            <Input\n              placeholder=\"e.g.{{data.host}} or 192.168.0.9\"\n              value={hostTemplate}\n              onChange={(v) => setHost(v.target.value)}\n            />\n          </Row>\n          <Row>Port Template</Row>\n          <Row>\n            <Input\n              placeholder=\"e.g.{{data.port}} or 502\"\n              value={portTemplate}\n              onChange={(v) => setPort(v.target.value)}\n            />\n          </Row>\n          <Row>Unit ID Template</Row>\n          <Row>\n            <Input\n              placeholder=\"e.g.{{data.unitId}}\"\n              value={unitIdTemplate}\n              onChange={(v) => setUnitId(v.target.value)}\n            />\n          </Row>\n          <Row>Timeout Template (in milliseconds)</Row>\n          <Row>\n            <Input\n              placeholder=\"e.g.{{data.timeout}} or 3000000\"\n              value={timeoutTemplate}\n              onChange={(v) => setTimeoutTemplate(v.target.value)}\n            />\n          </Row>\n        </>\n      )}\n      <Divider plain>Write Instructions</Divider>\n      <Row>\n        <Radio.Group\n          value={readInstructionsType}\n          onChange={(e) => onChangeReadInstructionsType(e.target.value)}>\n          <Space direction=\"vertical\">\n            <Radio value={'array'}>Array of Template Strings</Radio>\n            <Radio value={'payloadPath'}>Payload Path</Radio>\n          </Space>\n        </Radio.Group>\n      </Row>\n      {readInstructionsType === 'array' ? (\n        <>\n          {readInstructions.map((item: ReadInstructionsType, index: number) => {\n            return (\n              <Card style={{ width: 220 }}>\n                <Row>Register Type</Row>\n                <Row>\n                  <Select\n                    defaultValue={RegisterTypeData[0]}\n                    value={item?.typeTemplate}\n                    onChange={(e) =>\n                      setReadInstructionsConfig(e, 'typeTemplate', index)\n                    }\n                    style={{ width: '100%' }}>\n                    {RegisterTypeData.map((type) => (\n                      <Option key={type}>{type}</Option>\n                    ))}\n                  </Select>\n                </Row>\n                {item?.typeTemplate === 'read-device-identification' ? (\n                  <>\n                    <Row>Device ID Code Template</Row>\n                    <Row>\n                      <Input\n                        placeholder=\"e.g.1 or {{working.deviceIdCode}}\"\n                        value={item?.deviceIdCodeTemplate}\n                        onChange={(v) =>\n                          setReadInstructionsConfig(\n                            v.target.value,\n                            'deviceIdCodeTemplate',\n                            index\n                          )\n                        }\n                      />\n                    </Row>\n                    <Row>Objext ID Template</Row>\n                    <Row>\n                      <Input\n                        placeholder=\"e.g.0 or {{working.objectId}}\"\n                        value={item?.objectIdTemplate}\n                        onChange={(v) =>\n                          setReadInstructionsConfig(\n                            v.target.value,\n                            'objectIdTemplate',\n                            index\n                          )\n                        }\n                      />\n                    </Row>\n                  </>\n                ) : (\n                  <>\n                    <Row>Address Template</Row>\n                    <Row>\n                      <Input\n                        placeholder=\"e.g.0 or {{working.address}}\"\n                        value={item?.addressTemplate}\n                        onChange={(v) =>\n                          setReadInstructionsConfig(\n                            v.target.value,\n                            'addressTemplate',\n                            index\n                          )\n                        }\n                      />\n                    </Row>\n                    <Row>Length Template</Row>\n                    <Row>\n                      <Input\n                        placeholder=\"e.g.1 or {{working.length}}\"\n                        value={item?.lengthTemplate}\n                        onChange={(v) =>\n                          setReadInstructionsConfig(\n                            v.target.value,\n                            'lengthTemplate',\n                            index\n                          )\n                        }\n                      />\n                    </Row>\n                  </>\n                )}\n                <Row>Result Key</Row>\n                <Row>\n                  <Input\n                    placeholder=\"请保证key值的唯一性\"\n                    value={item?.key}\n                    onChange={(v) =>\n                      setReadInstructionsConfig(v.target.value, 'key', index)\n                    }\n                  />\n                </Row>\n                <Divider plain></Divider>\n              </Card>\n            );\n          })}\n        </>\n      ) : (\n        <>\n          <Row>Path to Read Instruction</Row>\n          <Row>\n            <Input\n              placeholder=\"e.g.data.myInstruction\"\n              value={readInstructions}\n              onChange={(v) =>\n                setReadInstructionsConfig(v.target.value, 'payload')\n              }\n            />\n          </Row>\n        </>\n      )}\n      <Divider plain>Result</Divider>\n      <Row>Result Path</Row>\n      <Row>\n        <Input\n          placeholder=\"e.g.result.modbusData\"\n          value={destinationPath}\n          onChange={(v) => setDestinationPath(v.target.value)}\n        />\n      </Row>\n    </Space>\n  );\n};\n"],"names":["Option","Select","ParityData","BaudRateData","RegisterTypeData","DataBitsData","FakeData","props","cells","cell","toJSON","React","config","connectionTypeTemplate","setConnectionType","items","setItems","name","setName","baudRateTemplate","setBaudRate","pathTemplate","setPath","parityTemplate","setParity","dataBitsTemplate","setDataBits","stopBitsTemplate","setStopBits","unitIdTemplate","setUnitId","areUnsignedInts","setUnsignedInts","timeoutTemplate","setTimeoutTemplate","endiannessTemplate","setEndianness","hostTemplate","setHost","portTemplate","setPort","readInstructionsType","setReadInstructionsType","readInstructions","setReadInstructions","destinationPath","setDestinationPath","includes","toString","addressTemplate","key","lengthTemplate","typeTemplate","cellId","prop","filter","item","addItem","e","preventDefault","setReadInstructionsConfig","value","type","index","temp","length","direction","plain","onChange","target","placeholder","v","style","width","event","dropdownRender","menu","margin","align","padding","onClick","whiteSpace","map","defaultValue","deviceIdCodeTemplate","objectIdTemplate"],"sourceRoot":""}