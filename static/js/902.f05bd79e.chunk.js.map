{"version":3,"file":"static/js/902.f05bd79e.chunk.js","mappings":"kOAQQA,EAAWC,EAAAA,EAAAA,OACbC,EAAa,CAAC,gBACPC,EAA6B,SAACC,GACzC,MAA4BC,EAAAA,SAAeH,EAAW,IAAG,eAAlDI,EAAM,KAAEC,EAAS,KACxB,EAA0BF,EAAAA,SAAe,IAAG,eAArCG,EAAK,KAAEC,EAAQ,KAEtBJ,EAAAA,WAAgB,WACd,GAAID,EAAQ,KAAD,EACe,QAAb,EAAGA,EAAMM,YAAI,OAAV,EAAYC,QADjB,CAKb,GAAG,CAACP,EAAMQ,SACVP,EAAAA,WAAgB,WAAO,IAAD,EACV,QAAV,EAAAD,EAAMM,YAAI,OAAV,EAAYG,KAAK,SAAU,CACzBP,OAAAA,EACAE,MAAAA,GAEJ,GAAG,CAACF,EAAQE,IASZ,OACE,UAAC,IAAK,CAACM,UAAU,WAAU,WACzB,SAAC,IAAG,sBACJ,SAAC,IAAG,WACF,SAAC,IAAM,CACLC,aAAcT,EACdU,SAbmB,SAACC,GAC1BV,EAAUU,EACZ,EAYQC,MAAO,CAAEC,MAAO,QAAS,SACxBjB,EAAWkB,KAAI,SAACC,GAAI,OACnB,SAACrB,EAAM,UAAaqB,GAAPA,EAAqB,SAIxC,SAAC,IAAG,0BACJ,SAAC,IAAG,WACF,SAAC,IAAK,CACJC,YAAY,sBACZL,MAAOT,EACPQ,SAtBkB,SAACO,GACzBd,EAASc,EAAEC,OAAOP,MACpB,QAyBF,C","sources":["nodeComponents/triggers/mqttComponent.tsx"],"sourcesContent":["import { Input, Row, Select, Space } from 'antd';\nimport * as React from 'react';\n\ninterface Params {\n  builder: string;\n  cell?: any;\n  cellId?: string;\n}\nconst { Option } = Select;\nconst BrokerData = ['Local Broker'];\nexport const FakeData: React.FC<Params> = (props) => {\n  const [broker, setBroker] = React.useState(BrokerData[0]);\n  const [topic, setTopic] = React.useState('');\n\n  React.useEffect(() => {\n    if (props) {\n      const cells = props.cell?.toJSON();\n      // setBroker()\n      // setTopic()\n    }\n  }, [props.cellId]);\n  React.useEffect(() => {\n    props.cell?.prop('config', {\n      broker,\n      topic,\n    });\n  }, [broker, topic]);\n\n  const handleBrokerChange = (value: string) => {\n    setBroker(value);\n  };\n  const onMqttTopicChange = (e: React.FocusEvent<HTMLInputElement>) => {\n    setTopic(e.target.value);\n  };\n\n  return (\n    <Space direction=\"vertical\">\n      <Row>Broker</Row>\n      <Row>\n        <Select\n          defaultValue={broker}\n          onChange={handleBrokerChange}\n          style={{ width: '100%' }}>\n          {BrokerData.map((type) => (\n            <Option key={type}>{type}</Option>\n          ))}\n        </Select>\n      </Row>\n      <Row>MQTT Topic</Row>\n      <Row>\n        <Input\n          placeholder=\"e.g.legacy/commands\"\n          value={topic}\n          onChange={onMqttTopicChange}\n        />\n      </Row>\n    </Space>\n  );\n};\n"],"names":["Option","Select","BrokerData","FakeData","props","React","broker","setBroker","topic","setTopic","cell","toJSON","cellId","prop","direction","defaultValue","onChange","value","style","width","map","type","placeholder","e","target"],"sourceRoot":""}