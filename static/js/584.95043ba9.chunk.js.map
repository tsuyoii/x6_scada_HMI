{"version":3,"file":"static/js/584.95043ba9.chunk.js","mappings":"kRA6BaA,EAA6B,SAACC,GACzC,MAA8BC,EAAAA,UAAe,GAAM,eAA5CC,EAAO,KAAEC,EAAU,KAC1B,EAA4CF,EAAAA,UAAe,GAAM,eAA1DG,EAAc,KAAEC,EAAiB,KACxC,EAAkCJ,EAAAA,SAlB1B,6XAkB8C,eAA/CK,EAAS,KAAEC,EAAY,KAExBC,GAAgBC,EAAAA,EAAAA,GAAYH,EAAW,KAE7CL,EAAAA,WAAgB,WACd,GAAID,EAAO,CAAC,IAAD,IACHU,EAAkB,QAAb,EAAGV,EAAMW,YAAI,aAAV,EAAYC,SAC1BL,EAAyB,QAAb,EAACG,EAAMG,cAAM,aAAZ,EAAcC,OAC7B,CACF,GAAG,CAACd,EAAMe,SACVd,EAAAA,WAAgB,WAAO,IAAD,EACV,QAAV,EAAAD,EAAMW,YAAI,OAAV,EAAYK,KAAK,SAAU,CACzBF,OAAQN,GAGZ,GAAG,CAACR,EAAMe,OAAQP,IAoBlB,OACE,SAAC,IAAK,CAACS,UAAU,WAAU,UACzB,UAAC,IAAG,YACF,SAAC,IAAI,CACHC,MAAM,wBACNC,OAAO,SAAC,IAAc,CAACC,QApBV,WACnBjB,GAAW,EACb,IAmBQkB,MAAO,CAAEC,MAAO,KAChBC,UAAW,CAAED,MAAO,IAAKE,SAAU,QAAS,UAC5C,yBAAMhB,OAER,SAAC,IAAK,CACJU,MAAM,QACNhB,QAASA,EACTuB,KAzBS,WACfpB,GAAkB,GAClBqB,YAAW,WACTvB,GAAW,GACXE,GAAkB,EACpB,GAAG,IACL,EAoBQD,eAAgBA,EAChBuB,SApBa,WACnBC,QAAQC,IAAI,yBACZ1B,GAAW,EACb,EAkBQmB,MAAO,IAAK,UACZ,SAAC,KAAS,CACRQ,KAAK,aACLC,MAAM,WACNC,KAAK,SACLC,SAvCW,SAACC,GACpB3B,EAAa2B,EACf,EAsCUC,MAAO7B,EACP8B,SAAU,GACVf,MAAO,CAAEC,MAAO,SAChBe,YAAa,CAAEC,iBAAiB,WAM5C,C,+EChGa7B,EAAc,SAAI0B,EAAQI,GACnC,OAA2CC,EAAAA,EAAAA,UAASL,GAAM,eAAnDM,EAAc,KAACC,EAAiB,KAOvC,OANAC,EAAAA,EAAAA,YAAU,WACN,IAAIC,EAAUlB,YAAW,WACrBgB,EAAkBP,EACtB,GAAEI,GACF,OAAO,kBAAIM,aAAaD,EAAQ,CACpC,GAAE,CAACT,EAAMI,IACFE,CACX,C","sources":["nodeComponents/logic/functionComponent.tsx","utils/utils.ts"],"sourcesContent":["import { Card, Modal, Row, Space } from 'antd';\nimport * as React from 'react';\nimport brace from 'brace';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/tomorrow';\nimport { useDebounce } from '../../utils/utils';\nimport { ExpandOutlined } from '@ant-design/icons';\n\ninterface Params {\n  builder: string;\n  cell?: any;\n  cellId?: string;\n}\nconst data = `/*\n* payload variable contains current payload.\n* e.g. payload.data.myValue\n*\n* You can modify the current payload variable\n* or return an object that will entirely\n* replace the payload.\n*\n* console.log() will write a message to\n* the Debug tab.\n*\n* The Buffer object is available for\n* complex parsing: https://nodejs.org/dist/latest-v6.x/docs/api/buffer.html\n*/`;\n\nexport const FakeData: React.FC<Params> = (props) => {\n  const [visible, setVisible] = React.useState(false);\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const [editValue, setEditValue] = React.useState(data);\n  // 在要保存的地方使用debouncededit，这样可以一段时间之后再保存结果\n  const debouncedEdit = useDebounce(editValue, 2000);\n\n  React.useEffect(() => {\n    if (props) {\n      const cells = props.cell?.toJSON();\n      setEditValue(cells.config?.script);\n    }\n  }, [props.cellId]);\n  React.useEffect(() => {\n    props.cell?.prop('config', {\n      script: debouncedEdit,\n    });\n    // console.log('time',timer,unitType,transToSec(timer,unitType))\n  }, [props.cellId, debouncedEdit]);\n\n  const onEditChange = (newValue: string) => {\n    setEditValue(newValue);\n  };\n  const onOpenDialog = () => {\n    setVisible(true);\n  };\n  const handleOk = () => {\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 500);\n  };\n  const handleCancel = () => {\n    console.log('Clicked cancel button');\n    setVisible(false);\n  };\n\n  return (\n    <Space direction=\"vertical\">\n      <Row>\n        <Card\n          title=\"Function (JavaScript)\"\n          extra={<ExpandOutlined onClick={onOpenDialog} />}\n          style={{ width: 220 }}\n          bodyStyle={{ width: 220, overflow: 'auto' }}>\n          <pre>{debouncedEdit}</pre>\n        </Card>\n        <Modal\n          title=\"Title\"\n          visible={visible}\n          onOk={handleOk}\n          confirmLoading={confirmLoading}\n          onCancel={handleCancel}\n          width={1000}>\n          <AceEditor\n            mode=\"javascript\"\n            theme=\"tomorrow\"\n            name=\"editor\"\n            onChange={onEditChange}\n            value={editValue}\n            fontSize={14}\n            style={{ width: '900px' }}\n            editorProps={{ $blockScrolling: true }}\n          />\n        </Modal>\n      </Row>\n    </Space>\n  );\n};\n","import { useEffect, useState } from \"react\"\n\nexport const useDebounce = <T>(value:T,delay?:number)=> {\n    const [debouncedValue,setDebouncedValue] = useState(value)\n    useEffect(()=>{\n        let timeout = setTimeout(()=>{\n            setDebouncedValue(value)\n        },delay)\n        return ()=>clearTimeout(timeout)\n    },[value,delay])\n    return debouncedValue\n}"],"names":["FakeData","props","React","visible","setVisible","confirmLoading","setConfirmLoading","editValue","setEditValue","debouncedEdit","useDebounce","cells","cell","toJSON","config","script","cellId","prop","direction","title","extra","onClick","style","width","bodyStyle","overflow","onOk","setTimeout","onCancel","console","log","mode","theme","name","onChange","newValue","value","fontSize","editorProps","$blockScrolling","delay","useState","debouncedValue","setDebouncedValue","useEffect","timeout","clearTimeout"],"sourceRoot":""}