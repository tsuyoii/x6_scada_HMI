{"version":3,"file":"static/js/268.1f2d5fe4.chunk.js","mappings":"kRA6BaA,GALMC,EAAAA,EAAAA,OAKuB,SAACC,GAC5BA,EAAMC,KAAnB,IACA,EAA8BC,EAAAA,UAAe,GAAM,eAA5CC,EAAO,KAAEC,EAAU,KAC1B,EAA4CF,EAAAA,UAAe,GAAM,eAA1DG,EAAc,KAAEC,EAAiB,KACxC,EAAkCJ,EAAAA,SAR1B,qEAQ8C,eAA/CK,EAAS,KAAEC,EAAY,KAExBC,GAAgBC,EAAAA,EAAAA,GAAYH,EAAW,KAMvCI,EAAM,WACVC,QAAQC,IAAIJ,EACd,EAgBA,OACE,+BACE,UAAC,IAAG,YACF,mBACA,2CACA,mBACA,SAAC,IAAI,CACHK,MAAM,oBACNC,OAAO,SAAC,IAAc,CAACC,QAvBV,WACnBZ,GAAW,EACb,IAsBQa,MAAO,CAAEC,MAAO,KAAM,SACrBT,KAEH,SAAC,IAAK,CACJK,MAAM,QACNX,QAASA,EACTgB,KA3BS,WACfb,GAAkB,GAClBc,YAAW,WACThB,GAAW,GACXE,GAAkB,EACpB,GAAG,IACL,EAsBQD,eAAgBA,EAChBgB,SAtBa,WACnBT,QAAQC,IAAI,yBACZT,GAAW,EACb,EAoBQc,MAAO,IAAK,UACZ,SAAC,KAAS,CACRI,KAAK,aACLC,MAAM,WACNC,KAAK,SACLC,SA7CW,SAACC,GACpBlB,EAAakB,GACbf,GACF,EA2CUgB,MAAOpB,EACPqB,SAAU,GACVX,MAAO,CAAEC,MAAO,SAChBW,YAAa,CAAEC,iBAAiB,WAM5C,E","sources":["nodeComponents/triggers/seri.tsx"],"sourcesContent":["import {\n  Card,\n  Col,\n  Divider,\n  Input,\n  Modal,\n  Row,\n  Select,\n  Space,\n  Typography,\n} from 'antd';\nimport * as React from 'react';\nimport brace from 'brace';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/tomorrow';\nimport { useDebounce } from '../../utils/utils';\nimport { ExpandOutlined, PlusOutlined } from '@ant-design/icons';\n\ninterface Params {\n  builder: string;\n  cell?: any;\n  cellId?: string;\n}\nconst { Option } = Select;\nconst data = `function onLoad(editor) {\n    console.log(\"I've loaded!\");\n  }`;\nlet index = 0;\nexport const FakeData: React.FC<Params> = (props) => {\n  const prop = props.cell;\n  const [visible, setVisible] = React.useState(false);\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const [editValue, setEditValue] = React.useState(data);\n  // 在要保存的地方使用debouncededit，这样可以一段时间之后再保存结果\n  const debouncedEdit = useDebounce(editValue, 2000);\n\n  const onEditChange = (newValue: string) => {\n    setEditValue(newValue);\n    con();\n  };\n  const con = () => {\n    console.log(debouncedEdit);\n  };\n  const onOpenDialog = () => {\n    setVisible(true);\n  };\n  const handleOk = () => {\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 500);\n  };\n  const handleCancel = () => {\n    console.log('Clicked cancel button');\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <Row>\n        <br />\n        <label>MQTT Topic</label>\n        <br />\n        <Card\n          title=\"Default size card\"\n          extra={<ExpandOutlined onClick={onOpenDialog} />}\n          style={{ width: 300 }}>\n          {debouncedEdit}\n        </Card>\n        <Modal\n          title=\"Title\"\n          visible={visible}\n          onOk={handleOk}\n          confirmLoading={confirmLoading}\n          onCancel={handleCancel}\n          width={1000}>\n          <AceEditor\n            mode=\"javascript\"\n            theme=\"tomorrow\"\n            name=\"editor\"\n            onChange={onEditChange}\n            value={editValue}\n            fontSize={14}\n            style={{ width: '900px' }}\n            editorProps={{ $blockScrolling: true }}\n          />\n        </Modal>\n      </Row>\n    </>\n  );\n};\n"],"names":["FakeData","Select","props","cell","React","visible","setVisible","confirmLoading","setConfirmLoading","editValue","setEditValue","debouncedEdit","useDebounce","con","console","log","title","extra","onClick","style","width","onOk","setTimeout","onCancel","mode","theme","name","onChange","newValue","value","fontSize","editorProps","$blockScrolling"],"sourceRoot":""}