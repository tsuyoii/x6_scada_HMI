{"version":3,"file":"static/js/290.c56d76bb.chunk.js","mappings":"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","sources":["nodeComponents/data/serialWriteComponent.tsx"],"sourcesContent":["import {\n  Card,\n  Col,\n  Divider,\n  Input,\n  Modal,\n  Radio,\n  Row,\n  Select,\n  Space,\n  Typography,\n} from 'antd';\nimport * as React from 'react';\nimport { useDebounce } from '../../utils/utils';\nimport { ExpandOutlined, PlusOutlined } from '@ant-design/icons';\n\ninterface Params {\n  builder: string;\n  cell?: any;\n  cellId?: string;\n}\nconst { Option } = Select;\nconst ParityData = ['none', 'even', 'mark', 'odd', 'space'];\nconst BaudRateData = ['110', '300', '600', '1200'];\nconst DataBitsData = [5, 6, 7, 8];\nconst WOnEncodData = ['ascii', 'utf8', 'utf16le', 'base64', 'binary', 'hex'];\nexport const FakeData: React.FC<Params> = (props) => {\n  const cells = props.cell?.toJSON();\n  const [pathTemplate, setPath] = React.useState(\n    cells.config?.pathTemplate || ''\n  );\n  const [items, setItems] = React.useState(BaudRateData);\n  const [name, setName] = React.useState('');\n  const [baudRateTemplate, setBaudRate] = React.useState(\n    cells.config?.baudRateTemplate || ''\n  );\n  const [parityTemplate, setParity] = React.useState(\n    cells.config?.parityTemplate || ParityData[1]\n  );\n  const [dataBitsTemplate, setDataBits] = React.useState(\n    cells.config?.dataBitsTemplate || DataBitsData[0]\n  );\n  const [stopBitsTemplate, setStopBits] = React.useState(\n    cells.config?.stopBitsTemplate || 1\n  );\n  const [rtsctsTemplate, setRtscts] = React.useState(\n    cells.config?.rtsctsTemplate || true\n  );\n  const [writeTemplate, setWrite] = React.useState(\n    cells.config?.writeTemplate || ''\n  );\n  const [resultPath, setResultPath] = React.useState(\n    cells.config?.resultPath || ''\n  );\n  const [encodeTemplate, setEncoding] = React.useState(\n    cells.config?.encodeTemplate || WOnEncodData[0]\n  );\n\n  React.useEffect(() => {\n    if (props) {\n      const cells = props.cell?.toJSON();\n      setPath(cells.config?.pathTemplate);\n      if (!items.includes(cells.config?.baudRateTemplate + '')) {\n        setItems([...items, cells.config?.baudRateTemplate?.toString()]);\n      }\n      setBaudRate(cells.config?.baudRateTemplate);\n      setParity(cells.config?.parityTemplate);\n      setDataBits(cells.config?.dataBitsTemplate);\n      setStopBits(cells.config?.stopBitsTemplate);\n      setRtscts(cells.config?.rtsctsTemplate);\n      setWrite(cells.config?.writeTemplate);\n      setEncoding(cells.config?.encodeTemplate);\n      setResultPath(cells.config?.resultPath);\n    }\n  }, [props.cellId]);\n\n  React.useEffect(() => {\n    props.cell?.prop('config', {\n      pathTemplate,\n      baudRateTemplate,\n      parityTemplate,\n      dataBitsTemplate,\n      stopBitsTemplate,\n      rtsctsTemplate,\n      writeTemplate,\n      encodeTemplate,\n      resultPath,\n    });\n  }, [\n    props.cellId,\n    pathTemplate,\n    baudRateTemplate,\n    parityTemplate,\n    dataBitsTemplate,\n    stopBitsTemplate,\n    rtsctsTemplate,\n    writeTemplate,\n    encodeTemplate,\n    resultPath,\n  ]);\n\n  const onBaudRateChange = (event: any) => {\n    setBaudRate(event);\n  };\n\n  const addItem = (e: any) => {\n    e.preventDefault();\n    setItems([...items, name]);\n    setName('');\n  };\n\n  const handleParityChange = (value: string) => {\n    setParity(value);\n  };\n  const onRtsctsChange = (e: any) => {\n    setRtscts(e.target.value);\n  };\n\n  return (\n    <Space direction=\"vertical\">\n      <Divider plain>Configuration</Divider>\n      <Row>Serial Path Template</Row>\n      <Row>\n        <Input\n          placeholder=\"e.g./dev/ROBOT\"\n          value={pathTemplate}\n          onChange={(v) => setPath(v.target.value)}\n        />\n      </Row>\n      <Row>Baud Rate Template</Row>\n      <Row>\n        <Select\n          style={{ width: 200 }}\n          placeholder=\"custom dropdown render\"\n          value={baudRateTemplate}\n          onChange={onBaudRateChange}\n          dropdownRender={(menu) => (\n            <>\n              {menu}\n              <Divider style={{ margin: '8px 0' }} />\n              <Space align=\"center\" style={{ padding: '0 8px 4px' }}>\n                <Input placeholder=\"Please enter item\" value={name} />\n                <Typography.Link\n                  onClick={addItem}\n                  style={{ whiteSpace: 'nowrap' }}>\n                  <PlusOutlined /> Add item\n                </Typography.Link>\n              </Space>\n            </>\n          )}>\n          {items.map((item) => (\n            <Option key={item}>{item}</Option>\n          ))}\n        </Select>\n      </Row>\n      <Row>Parity Template</Row>\n      <Row>\n        <Select\n          defaultValue={ParityData[1]}\n          value={parityTemplate}\n          onChange={handleParityChange}\n          style={{ width: '100%' }}>\n          {ParityData.map((type) => (\n            <Option key={type}>{type}</Option>\n          ))}\n        </Select>\n      </Row>\n      <Row>Data Bits Template</Row>\n      <Row>\n        <Select\n          defaultValue={DataBitsData[0]}\n          value={dataBitsTemplate}\n          onChange={(v) => setDataBits(v)}\n          style={{ width: '100%' }}>\n          {DataBitsData.map((type) => (\n            <Option key={type}>{type}</Option>\n          ))}\n        </Select>\n      </Row>\n      <Row>Stop Bits Template</Row>\n      <Row>\n        <Select\n          defaultValue={1}\n          value={stopBitsTemplate}\n          onChange={(v) => setStopBits(+v)}\n          style={{ width: '100%' }}>\n          <Option key={1}>1</Option>\n          <Option key={2}>2</Option>\n        </Select>\n      </Row>\n      <Row>RTS/CTS Template</Row>\n      <Row>\n        <Radio.Group onChange={onRtsctsChange} value={rtsctsTemplate}>\n          <Radio value={true}>true</Radio>\n          <Radio value={false}>false</Radio>\n        </Radio.Group>\n      </Row>\n      <Row>Write Template</Row>\n      <Row>\n        <Input\n          placeholder=\"e.g.hello\\r\"\n          value={writeTemplate}\n          onChange={(v) => setWrite(v.target.value)}\n        />\n      </Row>\n      <Row>Write Encoding</Row>\n      <Row>\n        <Select\n          defaultValue={WOnEncodData[0]}\n          value={encodeTemplate}\n          onChange={(v) => setEncoding(v)}\n          style={{ width: '100%' }}>\n          {WOnEncodData.map((type) => (\n            <Option key={type}>{type}</Option>\n          ))}\n        </Select>\n      </Row>\n      <Divider plain>Result</Divider>\n      <Row>Result Path</Row>\n      <Row>\n        <Input\n          placeholder=\"e.g.serialResult\"\n          value={resultPath}\n          onChange={(v) => setResultPath(v.target.value)}\n        />\n      </Row>\n    </Space>\n  );\n};\n"],"names":["Option","Select","ParityData","BaudRateData","DataBitsData","WOnEncodData","FakeData","props","cells","cell","toJSON","React","config","pathTemplate","setPath","items","setItems","name","setName","baudRateTemplate","setBaudRate","parityTemplate","setParity","dataBitsTemplate","setDataBits","stopBitsTemplate","setStopBits","rtsctsTemplate","setRtscts","writeTemplate","setWrite","resultPath","setResultPath","encodeTemplate","setEncoding","includes","toString","cellId","prop","addItem","e","preventDefault","direction","plain","placeholder","value","onChange","v","target","style","width","event","dropdownRender","menu","margin","align","padding","onClick","whiteSpace","map","item","defaultValue","type"],"sourceRoot":""}